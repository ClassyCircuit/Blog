# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the workflow will run
on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Build"]
    types: [completed]
jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Production
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
    - name: Download Build Artifact
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow: build.yml
        workflow_conclusion: success
        name: artifact
        path: artifact
    - name: Copy Artifact to Server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        port: ${{ secrets.PORT }}
        key: ${{ secrets.SSH_KEY }}
        source: artifact/*
        target: "/var/www/blog/staging/"
        rm: true
    - name: Deploy Artifact on Server
      uses: appleboy/ssh-action@master
      with: 
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          sudo systemctl stop blog.service
          
          # prod dir should be cleaned and new release copied from staging/artifacts to blog/prod
          sudo rm -rf /var/www/blog/prod/
          sudo mkdir /var/www/blog/prod 
          sudo find /var/www/blog/staging/artifact/ -name '*.tar.gz' -execdir  tar -C /var/www/blog/prod -xzf '{}' --strip-components 1 \;
          
          # startup logging outside app dir, creates file and gives permissions
          sudo mkdir /var/log/blog -p
          sudo touch /var/log/blog/logs.txt
          sudo chown www-data /var/log/blog/logs.txt
          sudo chmod 777 /var/log/blog/logs.txt
          
          sudo systemctl start blog.service
